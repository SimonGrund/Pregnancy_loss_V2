"Please enter a valid date and number of hours."
))
}
})
observe({
if (logged_in()) {
updateActionButton(session, "login", label = "Logout")
} else {
updateActionButton(session, "login", label = "Login")
}
})
}
# Run the application
shinyApp(ui = ui, server = server)
#Make a shiny application with three different users that can login and registrer their working hours by date and number of hours. The application should save the registrered hours in an excel sheet that is updated each time someone logs in and reports more hours
library(shiny)
library(openxlsx)
input.login = 0
input.submit = 0
# Define UI
ui <- fluidPage(
titlePanel("Working Hours Tracker"),
sidebarLayout(
sidebarPanel(
textInput("username", "Username"),
passwordInput("password", "Password"),
actionButton("login", "Login")
),
mainPanel(
conditionalPanel(
condition = "input.login > 0",
dateInput("date", "Date"),
numericInput("hours", "Number of Hours", value = 0),
actionButton("submit", "Submit")
)
)
)
)
# Define server
server <- function(input, output) {
logged_in <- reactiveVal(FALSE)
user_data <- reactiveValues(hours = data.frame())
observeEvent(input.login, {
if (input.login > 0) {
if (input.username == "user1" && input.password == "password1") {
logged_in(TRUE)
} else if (input.username == "user2" && input.password == "password2") {
logged_in(TRUE)
} else if (input.username == "user3" && input.password == "password3") {
logged_in(TRUE)
} else {
showModal(modalDialog(
title = "Invalid Credentials",
"Please enter valid username and password."
))
}
}
})
observeEvent(input.submit, {
if (!is.na(input.date) && input.hours > 0) {
new_entry <- data.frame(Date = input.date, Hours = input.hours)
user_data$hours <- rbind(user_data$hours, new_entry)
write.xlsx(user_data$hours, "working_hours.xlsx", append = TRUE)
showModal(modalDialog(
title = "Success",
"Working hours have been recorded."
))
} else {
showModal(modalDialog(
title = "Invalid Input",
"Please enter a valid date and number of hours."
))
}
})
observe({
if (logged_in()) {
updateActionButton("login", label = "Logout")
} else {
updateActionButton("login", label = "Login")
}
})
}
# Run the application
shinyApp(ui = ui, server = server)
#Make a shiny application with three different users that can login and registrer their working hours by date and number of hours. The application should save the registrered hours in an excel sheet that is updated each time someone logs in and reports more hours
library(shiny)
library(openxlsx)
input.login = 0
input.submit = 0
# Define UI
ui <- fluidPage(
titlePanel("Working Hours Tracker"),
sidebarLayout(
sidebarPanel(
textInput("username", "Username"),
passwordInput("password", "Password"),
actionButton("login", "Login")
),
mainPanel(
conditionalPanel(
condition = "input.login > 0",
dateInput("date", "Date"),
numericInput("hours", "Number of Hours", value = 0),
actionButton("submit", "Submit")
)
)
)
)
# Define server
server <- function(input, output) {
logged_in <- reactiveVal(FALSE)
user_data <- reactiveValues(hours = data.frame())
observeEvent(input.login, {
if (input.login > 0) {
if (input.username == "user1" && input.password == "password1") {
logged_in(TRUE)
} else if (input.username == "user2" && input.password == "password2") {
logged_in(TRUE)
} else if (input.username == "user3" && input.password == "password3") {
logged_in(TRUE)
} else {
showModal(modalDialog(
title = "Invalid Credentials",
"Please enter valid username and password."
))
}
}
})
observeEvent(input.submit, {
if (!is.na(input.date) && input.hours > 0) {
new_entry <- data.frame(Date = input.date, Hours = input.hours)
user_data$hours <- rbind(user_data$hours, new_entry)
write.xlsx(user_data$hours, "working_hours.xlsx", append = TRUE)
showModal(modalDialog(
title = "Success",
"Working hours have been recorded."
))
} else {
showModal(modalDialog(
title = "Invalid Input",
"Please enter a valid date and number of hours."
))
}
})
observe({
if (logged_in()) {
updateActionButton("login", label = "Logout")
} else {
updateActionButton("login", label = "Login")
}
})
}
# Run the application
shinyApp(ui = ui, server = server)
#Make a shiny application with three different users that can login and registrer their working hours by date and number of hours. The application should save the registrered hours in an excel sheet that is updated each time someone logs in and reports more hours
library(shiny)
library(openxlsx)
input.login = 0
input.date = 0
input.submit = 0
# Define UI
ui <- fluidPage(
titlePanel("Working Hours Tracker"),
sidebarLayout(
sidebarPanel(
textInput("username", "Username"),
passwordInput("password", "Password"),
actionButton("login", "Login")
),
mainPanel(
conditionalPanel(
condition = "input.login > 0",
dateInput("date", "Date"),
numericInput("hours", "Number of Hours", value = 0),
actionButton("submit", "Submit")
)
)
)
)
# Define server
server <- function(input, output) {
logged_in <- reactiveVal(FALSE)
user_data <- reactiveValues(hours = data.frame())
observeEvent(input.login, {
if (input.login > 0) {
if (input.username == "user1" && input.password == "password1") {
logged_in(TRUE)
} else if (input.username == "user2" && input.password == "password2") {
logged_in(TRUE)
} else if (input.username == "user3" && input.password == "password3") {
logged_in(TRUE)
} else {
showModal(modalDialog(
title = "Invalid Credentials",
"Please enter valid username and password."
))
}
}
})
observeEvent(input.submit, {
if (!is.na(input.date) && input.hours > 0) {
new_entry <- data.frame(Date = input.date, Hours = input.hours)
user_data$hours <- rbind(user_data$hours, new_entry)
write.xlsx(user_data$hours, "working_hours.xlsx", append = TRUE)
showModal(modalDialog(
title = "Success",
"Working hours have been recorded."
))
} else {
showModal(modalDialog(
title = "Invalid Input",
"Please enter a valid date and number of hours."
))
}
})
observe({
if (logged_in()) {
updateActionButton("login", label = "Logout")
} else {
updateActionButton("login", label = "Login")
}
})
}
# Run the application
shinyApp(ui = ui, server = server)
#Make a shiny application with three different users that can login and registrer their working hours by date and number of hours. The application should save the registrered hours in an excel sheet that is updated each time someone logs in and reports more hours
library(shiny)
library(openxlsx)
input.login = 0
input.date = 0
input.submit = 0
# Define UI
ui <- fluidPage(
titlePanel("Working Hours Tracker"),
sidebarLayout(
sidebarPanel(
textInput("username", "Username"),
passwordInput("password", "Password"),
actionButton("login", "Login")
),
mainPanel(
conditionalPanel(
condition = "input.login > 0",
dateInput("date", "Date"),
numericInput("hours", "Number of Hours", value = 0),
actionButton("submit", "Submit")
)
)
)
)
# Define server
server <- function(input, output) {
logged_in <- reactiveVal(FALSE)
user_data <- reactiveValues(hours = data.frame())
observeEvent(input.login, {
if (input.login > 0) {
if (input.username == "user1" && input.password == "password1") {
logged_in(TRUE)
} else if (input.username == "user2" && input.password == "password2") {
logged_in(TRUE)
} else if (input.username == "user3" && input.password == "password3") {
logged_in(TRUE)
} else {
showModal(modalDialog(
title = "Invalid Credentials",
"Please enter valid username and password."
))
}
}
})
observeEvent(input.submit, {
if (!is.na(input.date) && input.hours > 0) {
new_entry <- data.frame(Date = input.date, Hours = input.hours)
user_data$hours <- rbind(user_data$hours, new_entry)
write.xlsx(user_data$hours, "working_hours.xlsx", append = TRUE)
showModal(modalDialog(
title = "Success",
"Working hours have been recorded."
))
} else {
showModal(modalDialog(
title = "Invalid Input",
"Please enter a valid date and number of hours."
))
}
})
observe({
if (logged_in()) {
updateActionButton(session = "login", label = "Logout")
} else {
updateActionButton(session = "login", label = "Login")
}
})
}
# Run the application
shinyApp(ui = ui, server = server)
#Make a shiny application with three different users that can login and registrer their working hours by date and number of hours. The application should save the registrered hours in an excel sheet that is updated each time someone logs in and reports more hours
library(shiny)
library(openxlsx)
input.login = 0
input.date = 0
input.submit = 0
# Define UI
ui <- fluidPage(
titlePanel("Working Hours Tracker"),
sidebarLayout(
sidebarPanel(
textInput("username", "Username"),
passwordInput("password", "Password"),
actionButton("login", "Login")
),
mainPanel(
conditionalPanel(
condition = "input.login > 0",
dateInput("date", "Date"),
numericInput("hours", "Number of Hours", value = 0),
actionButton("submit", "Submit")
)
)
)
)
# Define server
server <- function(input, output, session) {
logged_in <- reactiveVal(FALSE)
user_data <- reactiveValues(hours = data.frame())
observeEvent(input.login, {
if (input.login > 0) {
if (input.username == "user1" && input.password == "password1") {
logged_in(TRUE)
} else if (input.username == "user2" && input.password == "password2") {
logged_in(TRUE)
} else if (input.username == "user3" && input.password == "password3") {
logged_in(TRUE)
} else {
showModal(modalDialog(
title = "Invalid Credentials",
"Please enter valid username and password."
))
}
}
})
observeEvent(input.submit, {
if (!is.na(input.date) && input.hours > 0) {
new_entry <- data.frame(Date = input.date, Hours = input.hours)
user_data$hours <- rbind(user_data$hours, new_entry)
write.xlsx(user_data$hours, "working_hours.xlsx", append = TRUE)
showModal(modalDialog(
title = "Success",
"Working hours have been recorded."
))
} else {
showModal(modalDialog(
title = "Invalid Input",
"Please enter a valid date and number of hours."
))
}
})
observe({
if (logged_in()) {
updateActionButton(session = session, "login", label = "Logout")
} else {
updateActionButton(session = session, "login", label = "Login")
}
})
}
# Run the application
shinyApp(ui = ui, server = server)
#Make a shiny application with three different users that can login and registrer their working hours by date and number of hours. The application should save the registrered hours in an excel sheet that is updated each time someone logs in and reports more hours
library(shiny)
library(openxlsx)
input.login = 0
input.date = 0
input.hours = 0
input.submit = 0
# Define UI
ui <- fluidPage(
titlePanel("Working Hours Tracker"),
sidebarLayout(
sidebarPanel(
textInput("username", "Username"),
passwordInput("password", "Password"),
actionButton("login", "Login")
),
mainPanel(
conditionalPanel(
condition = "input.login > 0",
dateInput("date", "Date"),
numericInput("hours", "Number of Hours", value = 0),
actionButton("submit", "Submit")
)
)
)
)
# Define server
server <- function(input, output, session) {
logged_in <- reactiveVal(FALSE)
user_data <- reactiveValues(hours = data.frame())
observeEvent(input.login, {
if (input.login > 0) {
if (input.username == "user1" && input.password == "password1") {
logged_in(TRUE)
} else if (input.username == "user2" && input.password == "password2") {
logged_in(TRUE)
} else if (input.username == "user3" && input.password == "password3") {
logged_in(TRUE)
} else {
showModal(modalDialog(
title = "Invalid Credentials",
"Please enter valid username and password."
))
}
}
})
observeEvent(input.submit, {
if (!is.na(input.date) && input.hours > 0) {
new_entry <- data.frame(Date = input.date, Hours = input.hours)
user_data$hours <- rbind(user_data$hours, new_entry)
write.xlsx(user_data$hours, "working_hours.xlsx", append = TRUE)
showModal(modalDialog(
title = "Success",
"Working hours have been recorded."
))
} else {
showModal(modalDialog(
title = "Invalid Input",
"Please enter a valid date and number of hours."
))
}
})
observe({
if (logged_in()) {
updateActionButton(session = session, "login", label = "Logout")
} else {
updateActionButton(session = session, "login", label = "Login")
}
})
}
# Run the application
shinyApp(ui = ui, server = server)
runApp('~/Tidsregistrering')
#Make a shiny application with three different users that can login and registrer their working hours by date and number of hours. The application should save the registrered hours in an excel sheet that is updated each time someone logs in and reports more hours
library(shiny)
library(openxlsx)
input.login = 0
input.date = 0
input.hours = 0
input.submit = 0
# Define UI
ui <- fluidPage(
titlePanel("Working Hours Tracker"),
sidebarLayout(
sidebarPanel(
textInput("username", "Username"),
passwordInput("password", "Password"),
actionButton("login", "Login")
),
mainPanel(
conditionalPanel(
condition = "input.login > 0",
dateInput("date", "Date"),
numericInput("hours", "Number of Hours", value = 0),
actionButton("submit", "Submit")
)
)
)
)
# Define server
server <- function(input, output, session) {
logged_in <- reactiveVal(FALSE)
user_data <- reactiveValues(hours = data.frame())
observeEvent(input.login, {
if (input.login > 0) {
if (input.username == "user1" && input.password == "password1") {
logged_in(TRUE)
} else if (input.username == "user2" && input.password == "password2") {
logged_in(TRUE)
} else if (input.username == "user3" && input.password == "password3") {
logged_in(TRUE)
} else {
showModal(modalDialog(
title = "Invalid Credentials",
"Please enter valid username and password."
))
}
}
})
observeEvent(input.submit, {
if (!is.na(input.date) && input.hours > 0) {
new_entry <- data.frame(Date = input.date, Hours = input.hours)
user_data$hours <- rbind(user_data$hours, new_entry)
write.xlsx(user_data$hours, "working_hours.xlsx", append = TRUE)
showModal(modalDialog(
title = "Success",
"Working hours have been recorded."
))
} else {
showModal(modalDialog(
title = "Invalid Input",
"Please enter a valid date and number of hours."
))
}
})
observe({
if (logged_in()) {
updateActionButton(session = session, "login", label = "Logout")
} else {
updateActionButton(session = session, "login", label = "Login")
}
})
}
# Run the application
shinyApp(ui = ui, server = server)
